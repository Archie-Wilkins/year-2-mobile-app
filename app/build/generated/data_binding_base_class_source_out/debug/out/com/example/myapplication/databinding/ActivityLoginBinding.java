// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button loginSubmit;

  @NonNull
  public final TextView loginTitle;

  @NonNull
  public final EditText passwordInput;

  @NonNull
  public final TextView passwordPrompt;

  @NonNull
  public final EditText usernameInput;

  @NonNull
  public final TextView usernamePrompt;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button loginSubmit,
      @NonNull TextView loginTitle, @NonNull EditText passwordInput,
      @NonNull TextView passwordPrompt, @NonNull EditText usernameInput,
      @NonNull TextView usernamePrompt) {
    this.rootView = rootView;
    this.loginSubmit = loginSubmit;
    this.loginTitle = loginTitle;
    this.passwordInput = passwordInput;
    this.passwordPrompt = passwordPrompt;
    this.usernameInput = usernameInput;
    this.usernamePrompt = usernamePrompt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.loginSubmit;
      Button loginSubmit = ViewBindings.findChildViewById(rootView, id);
      if (loginSubmit == null) {
        break missingId;
      }

      id = R.id.loginTitle;
      TextView loginTitle = ViewBindings.findChildViewById(rootView, id);
      if (loginTitle == null) {
        break missingId;
      }

      id = R.id.passwordInput;
      EditText passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.passwordPrompt;
      TextView passwordPrompt = ViewBindings.findChildViewById(rootView, id);
      if (passwordPrompt == null) {
        break missingId;
      }

      id = R.id.usernameInput;
      EditText usernameInput = ViewBindings.findChildViewById(rootView, id);
      if (usernameInput == null) {
        break missingId;
      }

      id = R.id.usernamePrompt;
      TextView usernamePrompt = ViewBindings.findChildViewById(rootView, id);
      if (usernamePrompt == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, loginSubmit, loginTitle,
          passwordInput, passwordPrompt, usernameInput, usernamePrompt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
