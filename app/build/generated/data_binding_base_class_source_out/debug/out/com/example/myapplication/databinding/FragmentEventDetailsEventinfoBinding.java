// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEventDetailsEventinfoBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView descriptionHeader;

  @NonNull
  public final TextView eventDetailsEventAddress;

  @NonNull
  public final TextView eventDetailsEventDate;

  @NonNull
  public final TextView eventDetailsEventDescription;

  @NonNull
  public final TextView eventDetailsEventEndTime;

  @NonNull
  public final TextView eventDetailsEventLocation;

  @NonNull
  public final TextView eventDetailsEventStartTime;

  @NonNull
  public final TextView eventDetailsEventStartTime2;

  @NonNull
  public final TextView eventDetailsEventTitle;

  @NonNull
  public final TextView eventDetailsEventType;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final ImageView imageView10;

  @NonNull
  public final ImageView imageView6;

  @NonNull
  public final ImageView imageView7;

  @NonNull
  public final TextView placeHeader;

  @NonNull
  public final Button shareEventButton;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView timeHeader;

  private FragmentEventDetailsEventinfoBinding(@NonNull ScrollView rootView,
      @NonNull TextView descriptionHeader, @NonNull TextView eventDetailsEventAddress,
      @NonNull TextView eventDetailsEventDate, @NonNull TextView eventDetailsEventDescription,
      @NonNull TextView eventDetailsEventEndTime, @NonNull TextView eventDetailsEventLocation,
      @NonNull TextView eventDetailsEventStartTime, @NonNull TextView eventDetailsEventStartTime2,
      @NonNull TextView eventDetailsEventTitle, @NonNull TextView eventDetailsEventType,
      @NonNull Guideline guideline2, @NonNull ImageView imageView10, @NonNull ImageView imageView6,
      @NonNull ImageView imageView7, @NonNull TextView placeHeader,
      @NonNull Button shareEventButton, @NonNull TextView textView4, @NonNull TextView textView5,
      @NonNull TextView textView6, @NonNull TextView timeHeader) {
    this.rootView = rootView;
    this.descriptionHeader = descriptionHeader;
    this.eventDetailsEventAddress = eventDetailsEventAddress;
    this.eventDetailsEventDate = eventDetailsEventDate;
    this.eventDetailsEventDescription = eventDetailsEventDescription;
    this.eventDetailsEventEndTime = eventDetailsEventEndTime;
    this.eventDetailsEventLocation = eventDetailsEventLocation;
    this.eventDetailsEventStartTime = eventDetailsEventStartTime;
    this.eventDetailsEventStartTime2 = eventDetailsEventStartTime2;
    this.eventDetailsEventTitle = eventDetailsEventTitle;
    this.eventDetailsEventType = eventDetailsEventType;
    this.guideline2 = guideline2;
    this.imageView10 = imageView10;
    this.imageView6 = imageView6;
    this.imageView7 = imageView7;
    this.placeHeader = placeHeader;
    this.shareEventButton = shareEventButton;
    this.textView4 = textView4;
    this.textView5 = textView5;
    this.textView6 = textView6;
    this.timeHeader = timeHeader;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEventDetailsEventinfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEventDetailsEventinfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_event_details_eventinfo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEventDetailsEventinfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.descriptionHeader;
      TextView descriptionHeader = ViewBindings.findChildViewById(rootView, id);
      if (descriptionHeader == null) {
        break missingId;
      }

      id = R.id.eventDetailsEventAddress;
      TextView eventDetailsEventAddress = ViewBindings.findChildViewById(rootView, id);
      if (eventDetailsEventAddress == null) {
        break missingId;
      }

      id = R.id.eventDetailsEventDate;
      TextView eventDetailsEventDate = ViewBindings.findChildViewById(rootView, id);
      if (eventDetailsEventDate == null) {
        break missingId;
      }

      id = R.id.eventDetailsEventDescription;
      TextView eventDetailsEventDescription = ViewBindings.findChildViewById(rootView, id);
      if (eventDetailsEventDescription == null) {
        break missingId;
      }

      id = R.id.eventDetailsEventEndTime;
      TextView eventDetailsEventEndTime = ViewBindings.findChildViewById(rootView, id);
      if (eventDetailsEventEndTime == null) {
        break missingId;
      }

      id = R.id.eventDetailsEventLocation;
      TextView eventDetailsEventLocation = ViewBindings.findChildViewById(rootView, id);
      if (eventDetailsEventLocation == null) {
        break missingId;
      }

      id = R.id.eventDetailsEventStartTime;
      TextView eventDetailsEventStartTime = ViewBindings.findChildViewById(rootView, id);
      if (eventDetailsEventStartTime == null) {
        break missingId;
      }

      id = R.id.eventDetailsEventStartTime2;
      TextView eventDetailsEventStartTime2 = ViewBindings.findChildViewById(rootView, id);
      if (eventDetailsEventStartTime2 == null) {
        break missingId;
      }

      id = R.id.eventDetailsEventTitle;
      TextView eventDetailsEventTitle = ViewBindings.findChildViewById(rootView, id);
      if (eventDetailsEventTitle == null) {
        break missingId;
      }

      id = R.id.eventDetailsEventType;
      TextView eventDetailsEventType = ViewBindings.findChildViewById(rootView, id);
      if (eventDetailsEventType == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.imageView10;
      ImageView imageView10 = ViewBindings.findChildViewById(rootView, id);
      if (imageView10 == null) {
        break missingId;
      }

      id = R.id.imageView6;
      ImageView imageView6 = ViewBindings.findChildViewById(rootView, id);
      if (imageView6 == null) {
        break missingId;
      }

      id = R.id.imageView7;
      ImageView imageView7 = ViewBindings.findChildViewById(rootView, id);
      if (imageView7 == null) {
        break missingId;
      }

      id = R.id.placeHeader;
      TextView placeHeader = ViewBindings.findChildViewById(rootView, id);
      if (placeHeader == null) {
        break missingId;
      }

      id = R.id.shareEventButton;
      Button shareEventButton = ViewBindings.findChildViewById(rootView, id);
      if (shareEventButton == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.timeHeader;
      TextView timeHeader = ViewBindings.findChildViewById(rootView, id);
      if (timeHeader == null) {
        break missingId;
      }

      return new FragmentEventDetailsEventinfoBinding((ScrollView) rootView, descriptionHeader,
          eventDetailsEventAddress, eventDetailsEventDate, eventDetailsEventDescription,
          eventDetailsEventEndTime, eventDetailsEventLocation, eventDetailsEventStartTime,
          eventDetailsEventStartTime2, eventDetailsEventTitle, eventDetailsEventType, guideline2,
          imageView10, imageView6, imageView7, placeHeader, shareEventButton, textView4, textView5,
          textView6, timeHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
