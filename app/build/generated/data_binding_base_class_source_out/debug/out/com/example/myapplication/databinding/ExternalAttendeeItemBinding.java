// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ExternalAttendeeItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView externalAttendeeName;

  @NonNull
  public final TextView externalAttendeeNumber;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final Button inviteResponseMaybe;

  @NonNull
  public final Button inviteResponseNo;

  @NonNull
  public final Button inviteResponseYes;

  private ExternalAttendeeItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView externalAttendeeName, @NonNull TextView externalAttendeeNumber,
      @NonNull ImageView imageView5, @NonNull Button inviteResponseMaybe,
      @NonNull Button inviteResponseNo, @NonNull Button inviteResponseYes) {
    this.rootView = rootView;
    this.externalAttendeeName = externalAttendeeName;
    this.externalAttendeeNumber = externalAttendeeNumber;
    this.imageView5 = imageView5;
    this.inviteResponseMaybe = inviteResponseMaybe;
    this.inviteResponseNo = inviteResponseNo;
    this.inviteResponseYes = inviteResponseYes;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ExternalAttendeeItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExternalAttendeeItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.external_attendee_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExternalAttendeeItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.externalAttendeeName;
      TextView externalAttendeeName = ViewBindings.findChildViewById(rootView, id);
      if (externalAttendeeName == null) {
        break missingId;
      }

      id = R.id.externalAttendeeNumber;
      TextView externalAttendeeNumber = ViewBindings.findChildViewById(rootView, id);
      if (externalAttendeeNumber == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.inviteResponseMaybe;
      Button inviteResponseMaybe = ViewBindings.findChildViewById(rootView, id);
      if (inviteResponseMaybe == null) {
        break missingId;
      }

      id = R.id.inviteResponseNo;
      Button inviteResponseNo = ViewBindings.findChildViewById(rootView, id);
      if (inviteResponseNo == null) {
        break missingId;
      }

      id = R.id.inviteResponseYes;
      Button inviteResponseYes = ViewBindings.findChildViewById(rootView, id);
      if (inviteResponseYes == null) {
        break missingId;
      }

      return new ExternalAttendeeItemBinding((ConstraintLayout) rootView, externalAttendeeName,
          externalAttendeeNumber, imageView5, inviteResponseMaybe, inviteResponseNo,
          inviteResponseYes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
