// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CalendarView;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNewEventFormBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Barrier barrier2;

  @NonNull
  public final CalendarView dateInput;

  @NonNull
  public final EditText descriptionInput;

  @NonNull
  public final EditText editTextTextPostalAddress8;

  @NonNull
  public final EditText endTimeInput;

  @NonNull
  public final TextView eventDate;

  @NonNull
  public final TextView eventDescription;

  @NonNull
  public final TextView eventEndTime;

  @NonNull
  public final TextView eventLocation;

  @NonNull
  public final EditText eventLocationInput;

  @NonNull
  public final TextView eventPostCode;

  @NonNull
  public final TextView eventStartTime;

  @NonNull
  public final Button eventSubmit;

  @NonNull
  public final TextView eventTitle;

  @NonNull
  public final EditText eventTitleInput;

  @NonNull
  public final TextView eventType;

  @NonNull
  public final EditText eventTypeInput;

  @NonNull
  public final EditText postCodeInput;

  @NonNull
  public final EditText startTimeInput;

  private ActivityNewEventFormBinding(@NonNull ScrollView rootView, @NonNull Barrier barrier2,
      @NonNull CalendarView dateInput, @NonNull EditText descriptionInput,
      @NonNull EditText editTextTextPostalAddress8, @NonNull EditText endTimeInput,
      @NonNull TextView eventDate, @NonNull TextView eventDescription,
      @NonNull TextView eventEndTime, @NonNull TextView eventLocation,
      @NonNull EditText eventLocationInput, @NonNull TextView eventPostCode,
      @NonNull TextView eventStartTime, @NonNull Button eventSubmit, @NonNull TextView eventTitle,
      @NonNull EditText eventTitleInput, @NonNull TextView eventType,
      @NonNull EditText eventTypeInput, @NonNull EditText postCodeInput,
      @NonNull EditText startTimeInput) {
    this.rootView = rootView;
    this.barrier2 = barrier2;
    this.dateInput = dateInput;
    this.descriptionInput = descriptionInput;
    this.editTextTextPostalAddress8 = editTextTextPostalAddress8;
    this.endTimeInput = endTimeInput;
    this.eventDate = eventDate;
    this.eventDescription = eventDescription;
    this.eventEndTime = eventEndTime;
    this.eventLocation = eventLocation;
    this.eventLocationInput = eventLocationInput;
    this.eventPostCode = eventPostCode;
    this.eventStartTime = eventStartTime;
    this.eventSubmit = eventSubmit;
    this.eventTitle = eventTitle;
    this.eventTitleInput = eventTitleInput;
    this.eventType = eventType;
    this.eventTypeInput = eventTypeInput;
    this.postCodeInput = postCodeInput;
    this.startTimeInput = startTimeInput;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNewEventFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNewEventFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_new_event_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNewEventFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrier2;
      Barrier barrier2 = ViewBindings.findChildViewById(rootView, id);
      if (barrier2 == null) {
        break missingId;
      }

      id = R.id.dateInput;
      CalendarView dateInput = ViewBindings.findChildViewById(rootView, id);
      if (dateInput == null) {
        break missingId;
      }

      id = R.id.descriptionInput;
      EditText descriptionInput = ViewBindings.findChildViewById(rootView, id);
      if (descriptionInput == null) {
        break missingId;
      }

      id = R.id.editTextTextPostalAddress8;
      EditText editTextTextPostalAddress8 = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPostalAddress8 == null) {
        break missingId;
      }

      id = R.id.endTimeInput;
      EditText endTimeInput = ViewBindings.findChildViewById(rootView, id);
      if (endTimeInput == null) {
        break missingId;
      }

      id = R.id.eventDate;
      TextView eventDate = ViewBindings.findChildViewById(rootView, id);
      if (eventDate == null) {
        break missingId;
      }

      id = R.id.eventDescription;
      TextView eventDescription = ViewBindings.findChildViewById(rootView, id);
      if (eventDescription == null) {
        break missingId;
      }

      id = R.id.eventEndTime;
      TextView eventEndTime = ViewBindings.findChildViewById(rootView, id);
      if (eventEndTime == null) {
        break missingId;
      }

      id = R.id.eventLocation;
      TextView eventLocation = ViewBindings.findChildViewById(rootView, id);
      if (eventLocation == null) {
        break missingId;
      }

      id = R.id.eventLocationInput;
      EditText eventLocationInput = ViewBindings.findChildViewById(rootView, id);
      if (eventLocationInput == null) {
        break missingId;
      }

      id = R.id.eventPostCode;
      TextView eventPostCode = ViewBindings.findChildViewById(rootView, id);
      if (eventPostCode == null) {
        break missingId;
      }

      id = R.id.eventStartTime;
      TextView eventStartTime = ViewBindings.findChildViewById(rootView, id);
      if (eventStartTime == null) {
        break missingId;
      }

      id = R.id.eventSubmit;
      Button eventSubmit = ViewBindings.findChildViewById(rootView, id);
      if (eventSubmit == null) {
        break missingId;
      }

      id = R.id.eventTitle;
      TextView eventTitle = ViewBindings.findChildViewById(rootView, id);
      if (eventTitle == null) {
        break missingId;
      }

      id = R.id.eventTitleInput;
      EditText eventTitleInput = ViewBindings.findChildViewById(rootView, id);
      if (eventTitleInput == null) {
        break missingId;
      }

      id = R.id.eventType;
      TextView eventType = ViewBindings.findChildViewById(rootView, id);
      if (eventType == null) {
        break missingId;
      }

      id = R.id.eventTypeInput;
      EditText eventTypeInput = ViewBindings.findChildViewById(rootView, id);
      if (eventTypeInput == null) {
        break missingId;
      }

      id = R.id.postCodeInput;
      EditText postCodeInput = ViewBindings.findChildViewById(rootView, id);
      if (postCodeInput == null) {
        break missingId;
      }

      id = R.id.startTimeInput;
      EditText startTimeInput = ViewBindings.findChildViewById(rootView, id);
      if (startTimeInput == null) {
        break missingId;
      }

      return new ActivityNewEventFormBinding((ScrollView) rootView, barrier2, dateInput,
          descriptionInput, editTextTextPostalAddress8, endTimeInput, eventDate, eventDescription,
          eventEndTime, eventLocation, eventLocationInput, eventPostCode, eventStartTime,
          eventSubmit, eventTitle, eventTitleInput, eventType, eventTypeInput, postCodeInput,
          startTimeInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
